apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  # This name uniquely identifies the Deployment
  name: minio-deployment
spec:
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # Label is used as selector in the service.
        app: minio
    spec:
      # Refer to the PVC created earlier
      volumes:
      - name: storage
        persistentVolumeClaim:
          # Name of the PVC created earlier
          claimName: minio-pv-claim
      containers:
      # - name: minio
      #   # Pulls the default Minio image from Docker Hub
      #   image: minio/minio:latest
      #   args:
      #   - server
      #   - /storage
      - name: minio
        image: "quay.io/minio/minio:RELEASE.2022-05-08T23-50-31Z"
        imagePullPolicy: IfNotPresent
        command:
          - "/bin/sh"
          - "-ce"
          - "/usr/bin/docker-entrypoint.sh minio server /storage --address :9000 --console-address :9001"
        # Minio access key and secret key
        env:
          - name: MINIO_ROOT_USER
            value: "minio"
          - name: MINIO_ROOT_PASSWORD
            value: "minio123"
        # ports:
        # - containerPort: 9000
        #   hostPort: 9000
        # # Mount the volume into the pod
        ports:
          - name: http
            containerPort: 9000
          - name: http-console
            containerPort: 9001
        volumeMounts:
        - name: storage # must match the volume name, above
          mountPath: "/storage"
        # Readiness probe detects situations when MinIO server instance
        # is not ready to accept traffic. Kubernetes doesn't forward
        # traffic to the pod while readiness checks fail.
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        # Liveness probe detects situations where MinIO server instance
        # is not working properly and needs restart. Kubernetes automatically
        # restarts the pods if liveness checks fail.
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        # env:
        # # Minio access key and secret key
        # - name: MINIO_ACCESS_KEY
        #   value: "minio"
        # - name: MINIO_SECRET_KEY
        #   value: "minio123"          
